{
"scope": "source.pascal",
   "completions":
   [
      { "trigger": "begin", "contents": "begin\n\t$0\nend;" },

      { "trigger": "var", "contents": "var\n\t$0" },
      { "trigger": "type", "contents": "type\n\t$0" },
      { "trigger": "const", "contents": "const\n\t$0" },
      { "trigger": "then", "contents": "then\n\t$0" },
      { "trigger": "else", "contents": "else\n\t$0" },
      { "trigger": "do", "contents": "do\n\t$0" },
      { "trigger": "of", "contents": "of\n\t$0" },
      { "trigger": "otherwise", "contents": "otherwise\n\t$0" },
      { "trigger": "specialize", "contents": "specialize" },

      // method attributes
      { "trigger": "inline", "contents": "inline" },
      { "trigger": "override", "contents": "override" },
      { "trigger": "abstract", "contents": "abstract" },

   ]
}